
import { useRouter } from 'next/router';
import Head from 'next/head'
import { useContext, useEffect, useState } from 'react';
import { Blog, MyContext, MyContextType, serverUrl } from '@/context/mycontext';
import BlogCard from '@/components/BlogCard';








export default function Account() {

  const router = useRouter();
  const { allBlogs, data, setAllBlogs, setData } = useContext<MyContextType>(MyContext);

  const [stateBlogs, setStateBlogs] = useState<Blog[]>(allBlogs)

  const LogOut = () => {
    setData({ token: null, userId: null })
    if (typeof window !== 'undefined') {
      router.push('/')
      localStorage.clear()
    }
  }
  const getBlogs = async () => {
    const resp = await fetch(`${serverUrl}/blogs`)
    const blogs = await resp.json()

    setAllBlogs(blogs)
    console.log(blogs, '%%%', allBlogs)
    setStateBlogs(blogs)
  }

  const handleFavourites = async (status: boolean, blogId: string) => {
    if (!data.token) {
      console.log("Login to Add to Favourite")
    } else {
      if (status) {
        setStateBlogs(stateBlogs.map((blog: Blog) => {

          if (blog._id === blogId) {
            const temp = blog
            temp['favourites'][`${data.userId}`] = false
            return temp
          }

          return blog
        }))
        await fetch(`${serverUrl}/blogs/removefromfavourite/${blogId}`, {
          method: 'PATCH',
          mode: 'cors',
          headers: {
            'Content-Type': 'application/json',
            "authorization": `${data.token}`
          }
        }).then(res => console.log("Removed from Favourite", status))

      } else {



        setStateBlogs(stateBlogs.map((blog: Blog) => {

          if (blog._id === blogId) {
            const temp = blog
            temp['favourites'][`${data.userId}`] = true
            return temp
          }

          return blog
        }))

        await fetch(`${serverUrl}/blogs/addtofavourite/${blogId}`, {
          method: 'PATCH',
          mode: 'cors',
          headers: {
            'Content-Type': 'application/json',
            "authorization": `${data.token}`
          }
        }).then(res => console.log("Removed from Favourite", status))


      }
    }

  }

  useEffect(() => {

    getBlogs()

  }, [])

  return (
    <>
      <Head>
        <title>Favourites</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <>
        <div>
          {stateBlogs.map(((blog, i) => {
            if (blog.creator===data.userId) return <BlogCard
              onClick={() => handleFavourites(blog.favourites[`${data.userId}`], blog._id)}

              favourites={blog.favourites[`${data.userId}`] ? "Remove" : "Add"}
              category={blog.category}
              image={`https://i.ibb.co/jWTQB1f/IMG-20230219-012652.jpg`}
              content={blog.content}
              date={blog.date}
              title={blog.title}
              username={blog.userName}
              key={i}
              _id={blog._id}
            ></BlogCard>
          }
          ))}
        </div>
        <div>
          <button onClick={LogOut}>LogOut</button>
        </div></>
    </>

  )
}
