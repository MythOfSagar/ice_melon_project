import Head from 'next/head'
import { useContext, useState } from 'react';
import { Blog, MyContext, MyContextType, serverUrl } from '@/context/mycontext';
import BlogCard from '@/components/BlogCard';
// import Filter from '@/components/Filter'

type staticBlogsProps = {
  staticBlogs: Blog[]
}

export default function Home({ staticBlogs }: staticBlogsProps) {


  const { data } = useContext<MyContextType>(MyContext);

  const [stateBlogs, setStateBlogs] = useState<Blog[]>(staticBlogs)
  // const [category,setCategory]=useState<string>('Select Category')

  // const getBlogs = async () => {
  //   let resp
  //    if(category==='Select Category'){resp = await fetch(`${serverUrl}/blogs`)}
  //    else{resp = await fetch(`${serverUrl}/blogs?category=${category}`)}
  //   const blogs = await resp.json()
  //   setAllBlogs(blogs)
  //   setStateBlogs(blogs)
  // }

  const handleFavourites = async (status: boolean, blogId: string) => {
    if (!data.token) {
      console.log("Login to Add to Favourite")
    } else {
      if (status) {
        setStateBlogs(stateBlogs.map((blog: Blog) => {

          if (blog._id === blogId) {
            const temp = blog
            temp['favourites'][`${data.userId}`] = false
            return temp
          }

          return blog
        }))
        await fetch(`${serverUrl}/blogs/removefromfavourite/${blogId}`, {
          method: 'PATCH',
          mode: 'cors',
          headers: {
            'Content-Type': 'application/json',
            "authorization": `${data.token}`
          }
        }).then(res => console.log("Removed from Favourite", res))
          .catch(err => console.log(err))

      } else {



        setStateBlogs(stateBlogs.map((blog: Blog) => {

          if (blog._id === blogId) {
            const temp = blog
            temp['favourites'][`${data.userId}`] = true
            return temp
          }

          return blog
        }))

        await fetch(`${serverUrl}/blogs/addtofavourite/${blogId}`, {
          method: 'PATCH',
          mode: 'cors',
          headers: {
            'Content-Type': 'application/json',
            "authorization": `${data.token}`
          }
        }).then(res => console.log("Added to Favourite", res))
          .catch(err => console.log(err))


      }
    }

  }



  // useEffect(() => {

  //     //getBlogs()

  // }, [category])

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        {/* <><Filter handleCategory={(category)=>setCategory(category)}></Filter></> */}
        {stateBlogs.map(((blog, i) => (
          <BlogCard
            onClick={() => handleFavourites(blog.favourites[`${data.userId}`], blog._id)}
            favourites={blog.favourites[`${data.userId}`] ? "Remove" : "Add"}
            category={blog.category}
            content={blog.content}
            date={blog.date}
            title={blog.title}
            username={blog.userName}
            key={i}
            _id={blog._id}
          ></BlogCard>)))}
      </div>
    </>
  )
}


export async function getStaticProps() {
  const res = await fetch(`${serverUrl}/blogs`)
  const data = await res.json()

  return {
    props: {
      staticBlogs: data
    },
    revalidate: 10
  };
}